package uz.gita.appbuilderadmin.presentation.componentsimport androidx.compose.foundation.layout.Spacerimport androidx.compose.foundation.layout.fillMaxWidthimport androidx.compose.foundation.layout.heightimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.layout.sizeimport androidx.compose.material3.Textimport androidx.compose.runtime.Composableimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.text.TextStyleimport androidx.compose.ui.text.font.Fontimport androidx.compose.ui.text.font.FontFamilyimport androidx.compose.ui.text.font.FontWeightimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.spimport uz.gita.appbuilderadmin.Rimport uz.gita.appbuilderadmin.presentation.screens.constructor.ConstructorContractimport uz.gita.appbuilderadmin.presentation.screens.constructor.SetId@Composablefun ComponentsInRow(    uiState: ConstructorContract.UiState,    onEventDispatchers: (ConstructorContract.Intent) -> Unit,) {    Spacer(modifier = Modifier.padding(top = 5.dp))    SetId(uiState = uiState, onEventDispatchers = onEventDispatchers)    Spacer(modifier = Modifier.size(10.dp))    Text(        text = "Components in Row",        style = TextStyle(            fontSize = 16.sp,            lineHeight = 24.sp,            fontFamily = FontFamily(listOf(Font(R.font.helvetica))),            fontWeight = FontWeight.W400,            color = Color.White        )    )    Spacer(modifier = Modifier.size(8.dp))    DemoSpinner(        list = uiState.componentList.filter { it != "Row" },        preselected = if (uiState.selectedComponent=="Row")"Input" else uiState.selectedComponent,        onSelectionChanged = {            onEventDispatchers(                ConstructorContract.Intent.ChangingSelectedComponent(                    it                )            )        },        modifier = Modifier            .fillMaxWidth()            .height(56.dp)    ) {}}
package uz.gita.appbuilderadmin.presentation.componentsimport android.os.Buildimport androidx.annotation.RequiresApiimport androidx.compose.foundation.layout.Rowimport androidx.compose.foundation.layout.fillMaxWidthimport androidx.compose.runtime.Composableimport androidx.compose.ui.Modifierimport uz.gita.appbuilderadmin.data.model.ComponentsModel@RequiresApi(Build.VERSION_CODES.O)@Composablefun     RowComponent(    componentsModel: List<ComponentsModel>,) {    Row(modifier = Modifier.fillMaxWidth()) {        componentsModel.forEach { component ->            when (component.componentsName) {                "Input" -> {                    RowInputComponent(data = component, modifier = Modifier.weight(component.weight))                }                "Text" -> {                    RowTextComponent(data = component, modifier = Modifier.weight(component.weight))                }                "Selector" -> {                    RowSelectorComponent(data = component, modifier = Modifier.weight(component.weight))                }                "MultiSelector" -> {                    RowMultiSelectorComponent(                        question = component.multiSelectDataQuestion,                        list = component.multiSelectorDataAnswers,                        onLongClick = { },                        onClickDelete = { },                        data = component,                        modifier = Modifier.weight(component.weight)                    )                }                "Date Picker" -> {                    RowDateComponent(                        modifier = Modifier.weight(component.weight), date = "", onLongClick = {},                        listener = { }, dataaa = component                    )                }                "Image" -> {                    ImageComponent(                        size = component.selectedImageSize,                        uri = component.imageUri,                        color = component.color,                        height = component.heightImage,                        aspectRatio = component.aspectRatio                    )                }            }        }    }}